// Media, min-width
@mixin respond($breakpoint) {
  @if $breakpoint==min-xs {
    @media only screen and (min-width: $media-xs+px) {
      @content;
    }
  }

  @if $breakpoint==min-sm {
    @media only screen and (min-width: $media-sm+px) {
      @content;
    }
  }

  @if $breakpoint==min-md {
    @media only screen and (min-width: $media-md+px) {
      @content;
    }
  }

  @if $breakpoint==min-lg {
    @media only screen and (min-width: $media-lg+px) {
      @content;
    }
  }

  @if $breakpoint==min-xl {
    @media only screen and (min-width: $media-xl+px) {
      @content;
    }
  }

  // Media, max-width
  @if $breakpoint==max-xl {
    @media only screen and (max-width: $media-xl+px) {
      @content;
    }
  }

  @if $breakpoint==max-lg {
    @media only screen and (max-width: $media-lg+px) {
      @content;
    }
  }

  @if $breakpoint==max-md {
    @media only screen and (max-width: $media-md+px) {
      @content;
    }
  }

  @if $breakpoint==max-md-ls {
    @media only screen and (max-width: $media-md+px) and (orientation: landscape) {
      @content;
    }
  }

  @if $breakpoint==max-sm {
    @media only screen and (max-width: $media-sm+px) {
      @content;
    }
  }

  @if $breakpoint==max-xs {
    @media only screen and (max-width: $media-xs+px) {
      @content;
    }
  }
}

// Connect fonts to project
@mixin font-face($font-family, $url, $weight) {
  @font-face {
    font-family: "#{$font-family}";
    src: url("../fonts/#{$url}.woff2") format("woff2"),
    url("../fonts/#{$url}.woff") format("woff"),
    url("../fonts/#{$url}.ttf") format("truetype");
    font-weight: #{$weight};
    font-display: swap;
    font-style: normal;
  }
}
